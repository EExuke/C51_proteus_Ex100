C51 COMPILER V9.02   TEXT1                                                                 01/30/2020 20:38:59 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE TEXT1
OBJECT MODULE PLACED IN Text1.OBJ
COMPILER INVOKED BY: C:\Users\99702\Documents\keil\C51\BIN\C51.EXE Text1.C DEBUG OBJECTEXTEND

line level    source

   1          //-----------------------------------------------------------------
   2          //  名称: 按键控制定时器选播多段音乐
   3          //-----------------------------------------------------------------
   4          //  说明: 本例内置三段音乐曲目,K1可启停音乐播放,K2用于选择音乐段.
   5          //-----------------------------------------------------------------
   6          #include <reg51.h>
   7          #include <intrins.h>
   8          #define INT8U   unsigned char
   9          #define INT16U  unsigned int
  10          //当前曲目索引,音符索引
  11          INT8U Song_idx = 0, Tone_idx = 0;
  12          sbit SPK = P3^7; //蜂鸣器
  13          sbit K1  = P1^0; //播放和停止键K1( 曲目选择键K2由INT0中断控制)
  14          //数码管段码表
  15          INT8U code SEG_CODE[] = {0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
  16          //14个音符在TIMER0模式0下的定时/计数寄存器值初值表
  17          INT8U code HI_LIST[] = 
  18          { 0,226,229,232,234,236,238,240,241,243,244,245,246,247,248 };
  19          INT8U code LO_LIST[] = 
  20          { 0,  4, 12, 9, 20,  2,  8,  6,  2, 22,  5, 26,  1,  4,  2 };
  21          //三段曲目音符(这些数据是任意编写的,读者可以自行修改)
  22          INT8U code Song[][50] = 
  23          {
  24           {1,2,3,1,1,2,3,1,3,4,5,3,4,5,5,6,5,3,5,6,5,3,5,3,2,1,2,1,-1},
  25           {3,3,3,4,5,5,5,5,6,5,3,5,3,2,1,5,6,5,3,3,2,1,1,-1},
  26           {3,2,1,3,2,1,1,2,3,1,1,2,3,1,3,4,5,3,4,5,5,6,5,3,5,3,2,1,3,2,1,1,-1}
  27          };
  28          //三段曲目节拍
  29          INT8U code Len[][50] = 
  30          {
  31           {1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,2,-1},
  32           {1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,2,2,-1},
  33           {1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,2,1,1,2,2,-1}
  34          };
  35          //-----------------------------------------------------------------
  36          // 延时子程序    
  37          //-----------------------------------------------------------------
  38          void delay_ms(INT16U ms) 
  39          {
  40   1              INT8U i; while(ms--) for(i = 0; i < 120; i++);
  41   1      }
  42          
  43          //-----------------------------------------------------------------
  44          // 主程序
  45          //-----------------------------------------------------------------
  46          void main()
  47          {
  48   1              P2 = 0xC0;                              //开始显示0
  49   1              IE = 0x8B;                              //允许TIMER0与INT0中断
  50   1              TMOD = 0x00;
  51   1              IT0 = 1;                                //外部中断0中断触发方式：下降沿触发
  52   1              IP = 0x01;                              //INT0设为高优先级
  53   1              while(1)
  54   1              {
  55   2                      while(K1 == 1);         //等待按下播放键
C51 COMPILER V9.02   TEXT1                                                                 01/30/2020 20:38:59 PAGE 2   

  56   2                      while(K1 == 0);         //等待释放播放键
  57   2                      Tone_idx = 0;           //从第0个音符开始
  58   2                      TR0 = 1;                        //开始播放
  59   2                      /* 播放过程中按下K1可提前停止播放（K1=0） */
  60   2                      /* 如果切换音乐段会触发外部中断，导致TR=0，播放也会停止 */
  61   2                      while(Song[Song_idx][Tone_idx] != -1 && K1 == 1 && TR0 == 1)
  62   2                      {
  63   3                              /* 每一音符的播放延时长度变化而形成节拍 */
  64   3                              delay_ms(300 * Len[Song_idx][Tone_idx]);
  65   3                              Tone_idx++;                             //下一音符索引
  66   3                      }
  67   2                      TR0 = 0;                        //停止播放
  68   2                      while(K1 == 0);         //如果提前停止播放，按键未释放时则等待
  69   2              }
  70   1      }
  71          
  72          //-----------------------------------------------------------------
  73          // 外部中断0(K2)
  74          //-----------------------------------------------------------------
  75          void EX0_INT() interrupt 0
  76          {
  77   1              TR0 = 0;                                        //结束或中途切换歌曲时停止播放
  78   1              if (++Song_idx == 3)            //K2选择下一曲目，到底回头
  79   1                      Song_idx = 0;
  80   1              Tone_idx = 0;                           //音符索引归0
  81   1              P2 = SEG_CODE[Song_idx];        //数码管
  82   1      }
  83          
  84          //-----------------------------------------------------------------
  85          // 定时器0中断函数
  86          // SPK输出脉冲,并根据曲目索引及音符索引设置新的定时初值
  87          //-----------------------------------------------------------------
  88          void T0_INT() interrupt 1
  89          {
  90   1              SPK = !SPK;
  91   1              TH0 = HI_LIST[Song[Song_idx][Tone_idx]];
  92   1              TL0 = LO_LIST[Song[Song_idx][Tone_idx]];
  93   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    248    ----
   CONSTANT SIZE    =    340    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
