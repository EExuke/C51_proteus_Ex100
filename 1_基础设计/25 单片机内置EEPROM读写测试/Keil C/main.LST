C51 COMPILER V9.02   MAIN                                                                  02/08/2020 18:15:31 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Users\99702\Documents\keil\C51\BIN\C51.EXE main.c DEBUG OBJECTEXTEND

line level    source

   1          //-----------------------------------------------------------------
   2          //  名称: 单片机内置EEPROM读写测试
   3          //-----------------------------------------------------------------
   4          //  说明: 按下K1向EEPROM 0x0000地址开始写入512个有序字节, 
   5          //        按下K2时向0x0200地址开始写入512个随机字节
   6          //        按下K3时读取EEPROM中的前512个有序字节并送串口输出显示
   7          //        按下K4时读取EEPROM中的后512个随机字节并送串口输出显示
   8          //  
   9          //-----------------------------------------------------------------
  10          #include "89c51rd2.h"
  11          #include <intrins.h>
  12          #include <absacc.h>
  13          #include <math.h>
  14          #include <stdlib.h>
  15          #define INT8U   unsigned char
  16          #define INT16U  unsigned int
  17          sbit LED_WR = P0^0;                             //写入指示灯
  18          sbit K1 = P1^1;                                 //K1按键
  19          sbit K2 = P1^3;                                 //K2按键
  20          sbit K3 = P1^5;                                 //K3按键
  21          sbit K4 = P1^7;                                 //K4按键
  22          INT8U OP = 0xFF;
  23          //-----------------------------------------------------------------
  24          // 延时
  25          //-----------------------------------------------------------------
  26          void delay_ms(INT16U x) {INT8U t; while(x--) for(t = 0; t<120; t++);}
  27          //-----------------------------------------------------------------
  28          // 从指定的内置EEPROM地址读取1字节
  29          //-----------------------------------------------------------------
  30          INT8U ReadEEPROM (INT16U addr)
  31          {
  32   1              INT8U dat;
  33   1              EECON = 0x02;                   //使能EEPROM映射(EEE)
  34   1              dat = XBYTE[addr];              //读取1字节
  35   1              EECON = 0x00;                   //禁止EEPROM映射
  36   1              return  dat;
  37   1      }
  38          
  39          //-----------------------------------------------------------------
  40          // 向内置EEPROM指定地址写入1字节
  41          //-----------------------------------------------------------------
  42          void WriteEEPROM (INT16U addr, INT8U dat)
  43          {
  44   1              while (EECON == 0xA3);  //EEPOM忙等待(EEBUSY)
  45   1              EECON = 0x02;                   //使能EEPROM映射(EEE)
  46   1              EETIM = 0xC8;                   //设置EETIM为5xFxtal
  47   1              XBYTE[addr] = dat;              //写入1字节
  48   1              EECON = 0x52;                   //输出EEPROM写时序:52H A2H
  49   1              EECON = 0xA2;
  50   1              while (EECON == 0xA3);  //EEPOM忙等待(EEBUSY)
  51   1              EECON = 0x00;                   //禁止EEPROM映射
  52   1      }
  53          
  54          //-----------------------------------------------------------------
  55          // 向串口输出一个字符
C51 COMPILER V9.02   MAIN                                                                  02/08/2020 18:15:31 PAGE 2   

  56          //-----------------------------------------------------------------
  57          void PutChar(INT8U c)   {       SBUF = c; while (TI == 0); TI = 0;      }
  58          //------------------------------------------------------------------
  59          // 串口输出字符串
  60          //------------------------------------------------------------------
  61          void Putstr(char *s)    {       while (*s) PutChar(*s++);       }
  62          //-----------------------------------------------------------------
  63          // 以十六进制形式显示所读取的字节
  64          //-----------------------------------------------------------------
  65          void Puts_HEX(INT8U dat)
  66          {
  67   1              char s[] = "   ";               //字符串初始为三个空格
  68   1              //将dat转换为字符串s
  69   1              s[0] = dat >> 4;
  70   1              s[1] = dat && 0x0F;
  71   1              if (s[0] <= 9)
  72   1                      s[0] += '0';
  73   1              else
  74   1                      s[0] += 'A' - 10;
  75   1              if (s[1] <= 9)
  76   1                      s[1] += '0';
  77   1              else
  78   1                      s[1] += 'A' - 10;
  79   1              Putstr(s);
  80   1      }
  81          
  82          //-----------------------------------------------------------------
  83          // 串口配置
  84          //-----------------------------------------------------------------
  85          void Init_USART()
  86          {
  87   1              SCON = 0x50;            //串口工作在方式1
  88   1              TMOD = 0x20;            //T1工作在模式2，8位自动装载
  89   1              PCON = 0x00;            //波特率不倍增
  90   1              TH1     = TL1 = 0xFD;   //波特率 9600 b/s （@ 11.0592 MHz）
  91   1              TR1 = 1;                        //启动定时器T1
  92   1      }
  93          
  94          //-----------------------------------------------------------------
  95          // 主程序
  96          //-----------------------------------------------------------------
  97          void main()
  98          {
  99   1              INT16U i;
 100   1              LED_WR = 1;                                             //初始时写入指示关闭
 101   1              Init_USART(); delay_ms(100);    //USART初始化
 102   1              //提示进行K1-K4操作
 103   1              Putstr("Plase Press K1,K2,K3 or K4 to Play EEPROM Test...\r\n");
 104   1              srand(300);                                             //设置随机种子
 105   1              while(1)
 106   1              {       while (P1 == 0xFF); //未按键则等待-------------------------
 107   2                      if              (K1 == 0) { delay_ms(10); if (K1 == 0) OP = 1; }
 108   2                      else if (K2 == 0) { delay_ms(10); if (K2 == 0) OP = 2; }
 109   2                      else if (K3 == 0) { delay_ms(10); if (K3 == 0) OP = 3; }
 110   2                      else if (K4 == 0) { delay_ms(10); if (K4 == 0) OP = 4; }
 111   2                      if (OP == 1)      //--------------------------------------------
 112   2                      {       
 113   3                              Putstr("Write EEPROM order bytes(512)...\r\n"); 
 114   3                              LED_WR = 0;
 115   3                              for (i=0; i<512; i++)   //从0x0000地址开始写入512个有序字节
 116   3                                      WriteEEPROM(0x0000 + i, i);
 117   3                              LED_WR = 1;                     
C51 COMPILER V9.02   MAIN                                                                  02/08/2020 18:15:31 PAGE 3   

 118   3                      }
 119   2                      else if (OP == 2) //---------------------------------------
 120   2                      {       
 121   3                              Putstr("Write EEPROM random bytes(512)...\r\n"); 
 122   3                              LED_WR = 0;
 123   3                              for (i=0; i<512; i++)   //从0x0200地址开始写入512个随机字节
 124   3                                      WriteEEPROM(0x0200 + i, rand());
 125   3                              LED_WR = 1;                                        
 126   3                      }
 127   2                      else if (OP == 3) //---------------------------------------
 128   2                      {       
 129   3                              Putstr("\r\r\rRead EEPROM DEMO: orderd bytes......\r\n");
 130   3                              //从0x0000地址读取512个有序字节并显示
 131   3                              for (i=0; i<512; i++)
 132   3                              {
 133   4                                      //读取并显示1字节
 134   4                                      Puts_HEX(ReadEEPROM(0x0000 + i));
 135   4                                      if ((i+1) % 30 == 0)
 136   4                                              Putstr("\r\n");
 137   4                              }                                                                 
 138   3                      }
 139   2                      else if (OP == 4) //---------------------------------------
 140   2                      {       
 141   3                              Putstr("\r\r\rRead EEPROM DEMO: random bytes......\r\n");
 142   3                              //从0x0200地址读取512个随机字节并显示
 143   3                              for (i=0; i<512; i++)
 144   3                              {
 145   4                                      //读取并显示1字节
 146   4                                      Puts_HEX(ReadEEPROM(0x0200 + i));
 147   4                                      if ((i+1) % 30 == 0)
 148   4                                              Putstr("\r\n");
 149   4                              }
 150   3                      }
 151   2                      Putstr("\r\n----OK!!!-----\r\n");
 152   2                      while (P1 != 0xFF);             //等待释放按键-----------------
 153   2              }
 154   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    588    ----
   CONSTANT SIZE    =    233    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
