C51 COMPILER V9.02   MAIN                                                                  04/12/2020 20:45:59 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Users\99702\Documents\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //-----------------------------------------------------------------
   2          //  名称: 可编程序接口芯片8155应用
   3          //-----------------------------------------------------------------
   4          //  说明: 本例利用8155的PA,PB连接数码管,显示8155当前定时初值,
   5          //                PC端口连接按键,分别用于调整定时初值,启动定时器,写8155RAM等.
   6          //                启动定时器后,在定时溢出时,8155 TOUT将触发INT0中断,输出提示音.
   7          //                所调节的定时初值不同时,声音输出的间隔也不同.
   8          //
   9          //-----------------------------------------------------------------
  10          #include <reg51.h>
  11          #include <intrins.h>
  12          #include <absacc.h>
  13          #define INT8U  unsigned char
  14          #define INT16U unsigned int
  15          //-----------------------------------------------------------------
  16          //8155地址定义
  17          #define COMM_8155               XBYTE[0xFD00]   //命令字端口
  18          #define PA_8155                 XBYTE[0xFD01]   //PA端口地址
  19          #define PB_8155                 XBYTE[0xFD02]   //PB端口地址
  20          #define PC_8155                 XBYTE[0xFD03]   //PC端口地址
  21          #define CONT_8155_L8    XBYTE[0xFD04]   //计数器低8位地址
  22          #define CONT_8155_H8    XBYTE[0xFD05]   //计数器高6位+2位方式地址
  23          #define PMEM_8155               XBYTE[0xFC00]   //8155RAM地址
  24          //-----------------------------------------------------------------
  25          //上述定义也可写成:
  26          //#define COMM_8155             *(XBYTE+0xFD00) //命令字端口
  27          //#define PA_8155               *(XBYTE+0xFD01) //PA端口地址
  28          //#define PB_8155               *(XBYTE+0xFD02) //PB端口地址
  29          //#define PC_8155               *(XBYTE+0xFD03) //PC端口地址
  30          //#define CONT_8155_L8  *(XBYTE+0xFD04) //计数器低8位地址
  31          //#define CONT_8155_H8  *(XBYTE+0xFD05) //计数器高6位+2位方式地址
  32          //#define PMEM_8155             *(XBYTE+0xFC00) //8155RAM地址
  33          //-----------------------------------------------------------------
  34          #define BEEP() P1 ^= (1<<0)                             //蜂鸣器定义
  35          //0-9的共阳数码管段码表,最后一位为黑屏
  36          const INT8U SEG_CODE[] =
  37          { 0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90,0xFF };
  38          INT8U Disp_Buffer[4] = {10,4,0,0};              //待显示信息缓冲
  39          volatile INT16U cnt_8155 = 400;                 //8155定时计数初值变量
  40          enum OP_Type {ADD,SUB};                                 //定时初值递增或递减
  41          //-----------------------------------------------------------------
  42          // 延时函数
  43          //-----------------------------------------------------------------
  44          void delay_ms(INT16U x) 
  45          {
  46   1              INT8U t; while(x--) for(t = 0; t < 120; t++);
  47   1      }
  48          
  49          //-----------------------------------------------------------------
  50          // 输出提示音
  51          //-----------------------------------------------------------------
  52          void Sounder()
  53          {
  54   1              INT8U i,j;
  55   1              for (i = 0; i < 50; i++) { BEEP();j = 100; while (--j); }
C51 COMPILER V9.02   MAIN                                                                  04/12/2020 20:45:59 PAGE 2   

  56   1      }
  57          
  58          //-----------------------------------------------------------------
  59          // 设置8155 定时初值
  60          //-----------------------------------------------------------------
  61          void Set_8155_TC()
  62          {
  63   1              CONT_8155_L8 = cnt_8155;                        //装入定时器初值低字节
  64   1              CONT_8155_H8 = cnt_8155 >> 8;           //装入定时器初值高字节
  65   1              COMM_8155 = 0xC3;       //0B11000011;   //设置PA,PB,PC端口方式及定时器命令
  66   1      }
  67          
  68          //-----------------------------------------------------------------
  69          // 8155定时初值调整
  70          //-----------------------------------------------------------------
  71          void adjust_tCount(enum OP_Type op)
  72          {
  73   1              INT8U i;
  74   1              INT16U cnt;
  75   1              cnt_8155 = (op == ADD) ? cnt_8155 + 50 : cnt_8155 - 50;
  76   1              if (cnt_8155 > 500)
  77   1                      cnt_8155 = 500;
  78   1              else if (cnt_8155 < 100)
  79   1                      cnt_8155 = 100;
  80   1              cnt = cnt_8155;
  81   1              for (i = 3; i >= 1; i--)
  82   1              {
  83   2                      Disp_Buffer[i] = cnt % 10;      //从低位开始逐位分解
  84   2                      cnt /= 10;
  85   2              }
  86   1      }
  87          
  88          //-----------------------------------------------------------------
  89          // 8155PC端口按键处理
  90          //-----------------------------------------------------------------
  91          void Key_Process()
  92          {
  93   1              INT8U i;
  94   1              static INT8U Pre_Key_State = 0xFF;
  95   1              INT8U curr_Key_State = PC_8155 | 0xF0;
  96   1              if (Pre_Key_State == curr_Key_State)
  97   1                      return;
  98   1              Pre_Key_State = curr_Key_State;
  99   1              switch(curr_Key_State)
 100   1              {
 101   2                      case ~(1<<0):   //K1：递增8155定时初值，每次递增50
 102   2                              adjust_tCount(ADD); break;
 103   2                      case ~(1<<1):   //K2：递减8155定时初值，每次递减50
 104   2                              adjust_tCount(SUB); break;
 105   2                      case ~(1<<2):   //K3：设置并启动8155定时器
 106   2                              Set_8155_TC();
 107   2                      case ~(1<<3):   //K4：写8155RAM:0~100
 108   2                              for(i=0; i<=100; i++)
 109   2                                      *(&PMEM_8155 + i) = i;
 110   2                              break;          
 111   2              }
 112   1      }
 113          
 114          //-----------------------------------------------------------------
 115          // 主程序
 116          //-----------------------------------------------------------------
 117          int main()
C51 COMPILER V9.02   MAIN                                                                  04/12/2020 20:45:59 PAGE 3   

 118          {       
 119   1              INT8U i;
 120   1              IE = 0x81;      //允许INT0中断
 121   1              IT0 = 1;        //下降沿触发
 122   1              //设置8155命令字：PA、PB输出，PC输入，不影响计数器工作
 123   1              COMM_8155 = 0x03;       //0B00000011;
 124   1              P1 = 0x00;
 125   1              while(1)
 126   1              {
 127   2                      for(i=0; i<4; i++)      //4位数码管显示
 128   2                      {
 129   3                              PB_8155 = 0x00; //暂时关闭
 130   3                              PA_8155 = SEG_CODE[Disp_Buffer[i]];     //向8155PA端口发送段码
 131   3                              PB_8155 = 1 << (7 - i);         //向8155PB端口发送位码
 132   3                              delay_ms(4);    //位间延时
 133   3                              Key_Process();  //8155PC端口按键处理
 134   3                      }
 135   2              }
 136   1      }
 137          
 138          //-----------------------------------------------------------------
 139          // INT0中断函数
 140          //-----------------------------------------------------------------
 141          void EX_INT0() interrupt 0 
 142          {
 143   1              EA = 0;                         //关中断
 144   1              Sounder();                      //蜂鸣器输出
 145   1              Set_8155_TC();          //重置8155 TC初值并启动
 146   1              EA = 1;                         //开中断
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    328    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
